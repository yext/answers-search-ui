name: Should deploy major version

on:
  workflow_call:
    inputs:
      ignore_prefix:
        required: false
        default: ''
        type: string
    outputs:
      should_deploy_major_version: 
        value: ${{ jobs.should_deploy_major_version.outputs.should_deploy_major_version }}

jobs:
  should_deploy_major_version:
    runs-on: ubuntu-latest
    outputs:
      should_deploy_major_version: ${{ steps.vars.outputs.should_deploy_major_version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: allow for major version deployment if the next minor version from current tag does not exist
        id: vars
        run: |
          MINOR_VERSION=$(echo "${GITHUB_REF_NAME##${{ inputs.ignore_prefix }}}" | cut -d '.' -f 2) 
          MAJOR_VERSION=$(echo "${GITHUB_REF_NAME##${{ inputs.ignore_prefix }}}" | cut -d '.' -f 1)
          NEXT_MINOR_VERSION=$(( $MINOR_VERSION + 1 ))
          TAGS_FOR_NEXT_MINOR=$(git tag --list "${{ inputs.ignore_prefix }}$MAJOR_VERSION.$NEXT_MINOR_VERSION.*")
          if [ -z "$TAGS_FOR_NEXT_MINOR" ]
          then
            echo 'Major version should be deployed.'
            echo should_deploy_major_version=true >> $GITHUB_OUTPUT
          else
            echo 'Major version should not be deployed.'
          fi
