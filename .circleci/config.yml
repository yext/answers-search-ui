# Yext Answers CircleCI configuration
version: 2.1
orbs:
  aws-s3: circleci/aws-s3@1.0.9
commands:
  setup-workspace:
    description: "Checks out the repo and installs node_modules with the cache"
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package-lock.json" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package-lock.json" }}
  deploy-to-aws:
    description: "Deploys the dist directory to a given subdirectory of the answers bucket"
    parameters:
      subdirectory:
        type: string
        default: ''
      cache-control:
        type: string
        default: "no-cache"
    steps:
      - attach_workspace:
          at: ~/answers
      - run:
          name: Configure AWS
          command: |
            mkdir -p ~/.aws
            cp .circleci/aws_config ~/.aws/config
            echo -e $AWS_PROD_PROFILE >> ~/.aws/config
      - aws-s3/copy:
          from: dist
          to: '${AWS_DEPLOY_BUCKET}<< parameters.subdirectory >>'
          arguments: |
            --acl public-read \
            --cache-control << parameters.cache-control >> \
            --recursive \
            --profile production \
jobs:
  # generate bundles
  build:
    docker:
      - image: circleci/node:14.5
    working_directory: ~/answers
    steps:
      - setup-workspace
      - run: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - dist
            - .circleci
  # generate bundles for all languages and locales
  build_i18n:
    docker:
      - image: circleci/node:14.5
    working_directory: ~/answers
    steps:
      - setup-workspace
      - run: npm run build-locales
      - persist_to_workspace:
          root: .
          paths:
            - dist
            - .circleci
  # run the jest unit tests
  unit_test:
    docker:
      - image: circleci/node:14.5
    resource_class: xlarge
    working_directory: ~/answers
    steps:
      - setup-workspace
      - attach_workspace:
          at: ~/answers
      - run: npm run test
  # run acceptance tests directly in the container
  headless_acceptance_test:
    docker:
      - image: circleci/node:14.5-browsers
    working_directory: ~/answers
    steps:
      - setup-workspace
      - attach_workspace:
          at: ~/answers
      - run: npx testcafe chrome:headless,firefox:headless tests/acceptance/acceptancesuites/*.js -q
  # run the browserstack testcafe acceptance tests
  browserstack_acceptance_test:
    docker:
      - image: circleci/node:14.5
    working_directory: ~/answers
    steps:
      - setup-workspace
      - attach_workspace:
          at: ~/answers
      - run: ./.circleci/run_browserstack_acceptance.sh
  # verify all translations are present
  translation_test:
    docker:
      - image: circleci/node:14.5
    working_directory: ~/answers
    steps:
      - setup-workspace
      - attach_workspace:
          at: ~/answers
      - run: 
          name: Verify translation files
          command: |
            sudo apt-get install -qq gettext
            ./.circleci/run_translation_verification.sh
  # verify that the third party notices file is up to date
  third_party_notices_test:
    docker:
      - image: circleci/node:14.5
    working_directory: ~/answers
    steps:
      - setup-workspace
      - attach_workspace:
          at: ~/answers
      - run: 
          name: Verify third party notices
          command: ./.circleci/validate_third_party_notices.sh
  # deploy to S3 in the root folder, overwriting the existing latest version
  deploy_latest:
    docker:
      - image: circleci/python:2.7
    working_directory: ~/answers
    steps:
      - deploy-to-aws
  # deploys assets to an uncached folder in the S3 bucket named by branch
  deploy_branch:
    docker:
      - image: circleci/python:2.7
    working_directory: ~/answers
    steps:
      - run:
          name: "Setup branch formatting, replace / with -"
          command: echo 'export FORMATTED_CIRCLE_BRANCH=$(echo ${CIRCLE_BRANCH} | sed "s/\//-/g")' >> $BASH_ENV
      - deploy-to-aws:
          subdirectory: '/dev/${FORMATTED_CIRCLE_BRANCH}'
  # deploys assets to a long-lived-cache folder in the S3 bucket named by hash
  deploy_canary:
    docker:
      - image: circleci/python:2.7
    working_directory: ~/answers
    steps:
      - deploy-to-aws:
          subdirectory: '/canary/${CIRCLE_SHA1}'
          cache-control: 'max-age=31536000'
      - deploy-to-aws:
          subdirectory: '/canary/latest'
  # deploys assets to a long-lived-cache folder in the S3 bucket named by release tag
  deploy_version:
    docker:
      - image: circleci/python:2.7
    working_directory: ~/answers
    steps:
      - deploy-to-aws:
          subdirectory: '/${CIRCLE_TAG}'
          cache-control: 'max-age=31536000'
      - run:
          name: "Get major and minor version substrings"
          command: |
            echo "export MINOR_VERSION="$(echo "${CIRCLE_TAG}" | cut -d '.' -f 1,2)"" >> $BASH_ENV
            echo "export MAJOR_VERSION="$(echo "${CIRCLE_TAG}" | cut -d '.' -f 1)"" >> $BASH_ENV
      - deploy-to-aws:
          subdirectory: '/${MINOR_VERSION}'
          cache-control: 'max-age=43200'
      - deploy-to-aws:
          subdirectory: '/${MAJOR_VERSION}'
          cache-control: 'max-age=43200'
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - develop
                - master
                - /^support\/.*/
                - /^hotfix\/.*/
                - /^feature\/.*-i18n/
                - /^release\/.*/
      - unit_test:
          requires:
            - build
      - headless_acceptance_test:
          requires:
            - build
      - browserstack_acceptance_test:
          requires:
            - build
      - translation_test:
          requires:
            - build
      - third_party_notices_test:
          requires:
            - build
      - deploy_branch:
          requires:
            - unit_test
            - browserstack_acceptance_test
            - headless_acceptance_test
            - translation_test
            - third_party_notices_test
  build_and_deploy_i18n:
    jobs:
      - build_i18n:
          filters:
            branches:
              only:
                - develop
                - /^support\/.*/
                - /^hotfix\/.*/
                - /^feature\/.*-i18n/
                - /^release\/.*/
      - unit_test:
          requires:
            - build_i18n
      - headless_acceptance_test:
          requires:
            - build_i18n
      - browserstack_acceptance_test:
          requires:
            - build_i18n
      - translation_test:
          requires:
            - build_i18n
      - third_party_notices_test:
          requires:
            - build_i18n
      - deploy_branch:
          filters:
            branches:
              ignore:
                - develop
          requires:
            - unit_test
            - browserstack_acceptance_test
            - headless_acceptance_test
            - translation_test
            - third_party_notices_test
      - deploy_canary:
          filters:
            branches:
              only: develop
          requires:
            - unit_test
            - headless_acceptance_test
            - browserstack_acceptance_test
            - translation_test
            - third_party_notices_test
  build_and_deploy_hold:
    jobs:
      - build_i18n:
          filters:
            tags:
              only: /^v.*/
            branches:
              only:
                - master
      - unit_test:
          filters:
            tags:
              only: /^v.*/
          requires:
            - build_i18n
      - headless_acceptance_test:
          filters:
            tags:
              only: /^v.*/
          requires:
            - build_i18n
      - browserstack_acceptance_test:
          filters:
            tags:
              only: /^v.*/
          requires:
            - build_i18n
      - translation_test:
          filters:
            tags:
              only: /^v.*/
          requires:
            - build_i18n
      - third_party_notices_test:
          filters:
            tags:
              only: /^v.*/
          requires:
            - build_i18n
      - hold:
          type: approval
          filters:
            tags:
              only: /^v.*/
          requires:
            - unit_test
            - browserstack_acceptance_test
            - headless_acceptance_test
            - translation_test
            - third_party_notices_test
      - deploy_latest:
          filters:
            branches:
              only: master
          requires:
            - hold
      - deploy_version:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          requires:
            - hold
